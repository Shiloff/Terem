@model AdminUsersViewResult
@using Business.DataAccess.Public.Entities.Identity
@using Project.WebUI.HtmlHelpers
@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/_LayoutInspinia.cshtml";
}
@section Styles {
    @Styles.Render("~/plugins/dataTablesStyles")
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Пользователи</h2>
        @Html.MvcSiteMap().SiteMapPath()
    </div>
</div>
<div class="wrapper wrapper-content">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Пользователи</h5>                    
                </div>
                <div class="ibox-content ">                   
                    <div class="row">
                        @using (Html.BeginForm(null, null, FormMethod.Get))
                        { 
                            @Html.Hidden("page", Model.PagingInfo.CurrentPage)
                            @Html.Hidden("sort", Model.Sorted)
                            <div class="col-sm-4 m-b-xs">                            
                                    @Html.DropDownListFor(m => m.RoleFilter, new SelectList(Model.Roles, "Id", "Name", Model.RoleFilter), new { @class = "input-sm form-control input-s-sm inline" })                            
                            </div>
                            <div class="col-sm-4 m-b-xs">
                                 <input type="text" placeholder="Фамилия" class="input-sm form-control" id="UserNameFilter" value="">                             
                            </div>
                            <div class="col-sm-4">
                                <div class="input-group">       
                                    @Html.TextBoxFor(m => m.UserNameFilter, new { @class = "input-sm form-control", placeholder = "LogIn" })                         
                                    <span class="input-group-btn">
                                        <input type="submit" class="btn btn-sm btn-primary" id="FindUserName" value="Поиск" />
                                    </span>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="dataTables_wrapper">
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered table-hover">
                                <thead>
                                    <tr>
                                        @Html.SortedTH("UserName", "UserNameDesc", "UserNameAsc", Model.Sorted, m => Url.Action("Users", new { page = Model.PagingInfo.CurrentPage, sort = m, RoleFilter = Model.RoleFilter, UserNameFilter = Model.UserNameFilter }), new Dictionary<string, object> { { "style", "width:20%" } })
                                        @Html.SortedTH("LastLoginTime", "LastLoginTimeDesc", "LastLoginTimeAsc", Model.Sorted, m => Url.Action("Users", new { page = Model.PagingInfo.CurrentPage, sort = m, RoleFilter = Model.RoleFilter, UserNameFilter = Model.UserNameFilter }), new Dictionary<string, object> { { "style", "width:150px" } })
                                        @Html.SortedTH("RegistrationDate", "RegistrationDateDesc", "RegistrationDateAsc", Model.Sorted, m => Url.Action("Users", new { page = Model.PagingInfo.CurrentPage, sort = m, RoleFilter = Model.RoleFilter, UserNameFilter = Model.UserNameFilter }), new Dictionary<string, object> { { "style", "width:150px" } })
                                        @Html.SortedTH("LoginProvider", "LoginProviderDesc", "LoginProviderAsc", Model.Sorted, m => Url.Action("Users", new { page = Model.PagingInfo.CurrentPage, sort = m, RoleFilter = Model.RoleFilter, UserNameFilter = Model.UserNameFilter }), new Dictionary<string, object> { { "style", "width:110px" } })
                                        <th>
                                            Edit
                                        </th>
                                        <th>
                                            Ban
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (ApplicationUserEntity user in Model.Users)
                                    {
                                        @Html.Partial("_AdminUserPartial", user)
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="btn-group pull-right">
                            @Html.PageLinks(Model.PagingInfo, k => Url.Action("Users", new { page = k, sort = Model.Sorted, RoleFilter = Model.RoleFilter, UserNameFilter=Model.UserNameFilter }))
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
<script>
    @*$(document).ready(function () {
        $("#FindRole").click(function () {
            var newRoleFilter = $("#RoleFilter").val();
            var userNameFilter = $("#UserNameFilter").val();
            var location;
            if (newRoleFilter != 0) {
                location = "@Html.Raw(Url.Action("Users", new { page = Model.PagingInfo.CurrentPage, sort = Model.Sorted, RoleFilter = "newRoleFilter", UserNameFilter = "UserNameFilter" }))";
            }
            else {
                location = "@Html.Raw(Url.Action("Users", new { page = Model.PagingInfo.CurrentPage, sort = Model.Sorted, UserNameFilter = "userNameFilter" }))";
            }
            location = location.replace("newRoleFilter", encodeURIComponent(newRoleFilter));
            location = location.replace("userNameFilter", encodeURIComponent(userNameFilter));
            window.location = location;
        });
    });*@
</script>
}