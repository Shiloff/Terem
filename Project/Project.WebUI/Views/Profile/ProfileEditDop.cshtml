@using Project.WebUI.Models
@model ProfileEditResult
@{
    ViewBag.Title = "ProfileEdit";
    Layout = "~/Views/Shared/_LayoutInspinia.cshtml";
}



<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Редактировать профиль</h2>
        @Html.MvcSiteMap().SiteMapPath()
    </div>
</div>
<div class="wrapper wrapper-content">
    <div class="row">
        <div class="col-md-12">


            @using (Html.BeginForm("ProfileEditDop", "Profile", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
            {

                @Html.AntiForgeryToken()
                @Html.ValidationSummary()

                @Html.Hidden("Profile.UserId", Model.Profile.UserId);
                @Html.Hidden("Profile.ProfileId", Model.Profile.ProfileId);

                <div class="tabs-container">
                    <ul class="nav nav-tabs">
                        <li class=""><a href="@Url.Action("ProfileEdit","Profile")">Основные</a></li>
                        <li class="active"><a data-toggle="tab" href="#tab-2" aria-expanded="false">Дополнительные</a></li>
                        <li class=""><a href="@Url.Action("ProfileEditAvatar","Profile")">Фото</a></li>
                    </ul>
                    <div class="tab-content">
                        <div id="tab-2" class="tab-pane active">
                            <div class="panel-body form-horizontal">
                                <div class="form-group ">
                                    @Html.Label("Инетересы", new { @class = "col-md-1 control-label" })
                                    <div class="col-md-11">

                                        @{
                                            var selected = Model.Profile.Intereses.Select(m => m.ProfileInteresId).ToList();
                                            int i = 0;
                                        }
                                        @Html.ListBox("SelectedInterests", new MultiSelectList(Model.Interests, "Id", "Name", selected), new { data_placeholder = "Выберите интерес", multiple = "multiple", @class = "chosen-select" })
                                    </div>
                                </div>
                                <div class="hr-line-dashed"></div>
                                <div class="form-group ">
                                    @Html.Label("Обо мне", new { @class = "col-md-1 control-label" })
                                    <div class="col-md-11">
                                        @Html.TextArea("Profile.AboutMe", null, new { @class = "form-control", rows = "6", style = "resize:none;" })
                                    </div>
                                </div>
                                <div class="hr-line-dashed"></div>
                                <div class="row">
                                    <div class="form-group col-md-6">
                                        @Html.Label("Алкоголь", new { @class = "col-md-2 control-label" })
                                        <div class=" col-md-10">
                                            @foreach (var Alcohol in Model.ProfileAlcohol)
                                            {
                                                <div class="radio i-checks">
                                                    @Html.RadioButton("Profile.ProfileAlcoholId", Alcohol.Id, Alcohol.Id == Model.Profile.ProfileAlcoholId)
                                                    @Html.Label(Alcohol.Name)

                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        @Html.Label("Курение", new { @class = "col-md-2 control-label" })
                                        <div class=" col-md-10">
                                            @foreach (var Smoking in Model.ProfileSmoking)
                                            {
                                                <div class="radio i-checks">
                                                    @Html.RadioButton("Profile.ProfileSmokingId", Smoking.Id, Smoking.Id == Model.Profile.ProfileSmokingId)
                                                    @Html.Label(Smoking.Name)
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        @Html.Label("Животные", new { @class = "col-md-2 control-label" })
                                        <div class=" col-md-10">
                                            @foreach (var Animal in Model.ProfileAnimals)
                                            {
                                                <div class="radio i-checks">
                                                    @Html.RadioButton("Profile.ProfileAnimalsId", Animal.Id, Animal.Id == Model.Profile.ProfileAnimalsId)
                                                    @Html.Label(Animal.Name)
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        @Html.Label("Пол соседа", new { @class = "col-md-2 control-label" })
                                        <div class=" col-md-10">
                                            @foreach (var Sex in Model.ProfileSex)
                                            {
                                                <div class="radio i-checks">
                                                    @Html.RadioButton("Profile.ProfileSexWhoId", Sex.Id, Sex.Id == Model.Profile.ProfileSexWhoId)
                                                    @Html.Label(Sex.Name)
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="text-right">
                                    <input type="submit" value="Имзенить" class="btn btn-info" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }

        </div>
    </div>
</div>
@section Styles{
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    <style>
        .container {
            max-width: 960px;
        }

        img {
            max-width: 100%;
        }
    </style>
}

@section Scripts{
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/imagecropper")
    <script>
        var initcropper = false;
        $(document).ready(function () {
            $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                if ((e.target.hash == "#tab-3") && (!initcropper)) {
                    initcropper = true;
                    var $image = $("#ProfileImage");
                    var options = {
                        aspectRatio: 1,
                        viewMode: 2,
                        preview: ".img-preview",
                        built: function () {
                            var data = $(this).cropper('getData', true);
                            $("#cropx").val(Math.round(data.x));
                            $("#cropy").val(Math.round(data.y));
                            $("#croph").val(Math.round(data.height));
                            $("#cropw").val(Math.round(data.width));
                        },
                        crop: function (e) {
                            $("#cropx").val(Math.round(e.x));
                            $("#cropy").val(Math.round(e.y));
                            $("#croph").val(Math.round(e.height));
                            $("#cropw").val(Math.round(e.width));
                        }
                    };

                    $image.cropper(options);

                    var $inputImage = $("#inputImage2");
                    if (window.FileReader) {
                        $inputImage.change(function () {
                            var fileReader = new FileReader(),
                                    files = this.files,
                                    file;

                            if (!files.length) {
                                return;
                            }

                            file = files[0];

                            if (/^image\/\w+$/.test(file.type)) {
                                fileReader.readAsDataURL(file);
                                fileReader.onload = function () {
                                    //$inputImage.val("");
                                    $image.cropper("replace", this.result);
                                };
                            } else {
                                showMessage("Please choose an image file.");
                            }
                        });
                    } else {
                        $inputImage.addClass("hide");
                    }

                }// newly activated tab

            });


            $('#birfdayDate .input-group.date').datepicker({
                startView: 2,
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true,
                language: 'ru'
            });
            $(".chosen-select").chosen({ width: "100%" });
        });
    </script>
}



